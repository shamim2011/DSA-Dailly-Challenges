//Approach (simple traverse and check)
//T.C : O(n^2)
//S.C : O(1)


class Solution {
    public boolean hasSameDigits(String s) {
        // Initialize StringBuilder with input string
        StringBuilder sb = new StringBuilder(s);
        
        // Continue processing until string length is 2
        while (sb.length() > 2) {
            // Create a new StringBuilder for the transformed string
            StringBuilder newSb = new StringBuilder();
            
            // Iterate through adjacent pairs of digits
            for (int i = 0; i < sb.length() - 1; i++) {
                // Convert characters to integers by subtracting ASCII value of '0'
                int num1 = sb.charAt(i) - '0';
                int num2 = sb.charAt(i + 1) - '0';
                
                // Sum the digits and take modulo 10
                int num = (num1 + num2) % 10;
                
                // Append the result to the new StringBuilder
                newSb.append(num);
            }
            
            // Update sb to the new transformed string
            sb = newSb;
        }
        
        // Check if the two remaining digits are equal
        return sb.charAt(0) == sb.charAt(1);
    }
}
